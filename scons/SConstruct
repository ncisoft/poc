import os
import sys
import SCons

home_dir = os.environ['HOME']
env = Environment(BUILDROOT="build",
                  CCFLAGS=['-g', '-std=gnu99',  '-O2', '-Wall',           \
                           '-Wno-format-truncation', '-Wno-unused-label', \
                           '-I./',                                        \
                           ])
env.Decider('timestamp-newer')

def CheckPKGConfig(context, version):
    context.Message( 'Checking for pkg-config... ' )
    ret = context.TryAction('pkg-config --atleast-pkgconfig-version=%s' % version)[0]
    context.Result( ret )
    return ret

def CheckPKG(context, name):
    context.Message( 'Checking for %s... ' % name )
    ret = context.TryAction('pkg-config --exists \'%s\'' % name)[0]
    context.Result( ret )
    return ret

conf = Configure(env, custom_tests = { 'CheckPKGConfig' : CheckPKGConfig,
                                      'CheckPKG' : CheckPKG })

#if not conf.CheckPKG('gtk+-2.0 >= 2.4.9'):
pkg_deps = ['check', 'hiredis', ]

for pkg in pkg_deps:
    if not conf.CheckPKG(pkg):
        print( '%s not found.' % pkg)
        Exit(1)

for pkg in pkg_deps:
    env.ParseConfig('pkg-config --cflags --libs %s' % pkg)

env.top_dir = os.getcwd()
env.ParseConfig('echo  -I%s/logger ' % env.top_dir)
#env.lib_logger = File('./logger/.libs/liblogger.a')
for module in ['logger', 'src']:
    env.SConscript("%s/SConscript" % module, {'env': env})
